plugins {
	id "java"
	id "application"
	id "com.google.osdetector" version "1.6.1"
}

description = "GUI(JavaFX) 프로그램의 jlink 예제"

group "kr.ayukawa"

sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

mainClassName = "kr.ayukawa.jlinktest.gui/kr.ayukawa.gui.EntryPoint"

// ========== 환경변수 설정
def PLATFORM = osdetector.os == 'osx' ? 'mac' : osdetector.os == 'windows' ? 'win' : osdetector.os
def PATH_SEPARATOR = new String(File.pathSeparatorChar)
def JAVA_HOME = System.getenv("JAVA_HOME")
// JavaFX 라이브러리(*.jar) 경로. 컴파일 및 실행에 사용된다.
def PATH_TO_FX = System.getenv("PATH_TO_FX")
// JavaFX 정적 링킹 파일(*.jmod) 경로. 커스텀 런타임 JVM 작성에 사용된다.
def PATH_TO_FX_JMODS = System.getenv("PATH_TO_FX_JMODS")
// 커스텀 런타임 JVM이 생성될 위치
def DIST_PATH = "dist"
// 컴파일 및 실행, 커스텀 JVM 생성시 공통으로 사용될 모듈패스
def COMMON_MODULE_PATH = [
	compileJava.getDestinationDir().toString(),		// Gradle을 통해 컴파일된 class 파일이 위치하는 루트 경로
]
// 컴파일 및 실행시 사용될 모듈패스
def RUNNING_MODULE_PATH = [
	PATH_TO_FX,
]
// 커스텀 JVM 생성시 사용될 모듈패스
def LINKING_MODULE_PATH = [
	"${JAVA_HOME}/jmods",
	"${PATH_TO_FX_JMODS}",
]
def USING_MODULES = [
	"kr.ayukawa.jlinktest.gui",
]

compileJava {
	options.encoding = "UTF-8"
	options.compilerArgs = [
		"--module-path", "${ (COMMON_MODULE_PATH + RUNNING_MODULE_PATH).join(PATH_SEPARATOR) }",
		"--add-modules", "${USING_MODULES.join(',')}",
	]
}

run {
	jvmArgs "--module-path", "${ (COMMON_MODULE_PATH + RUNNING_MODULE_PATH).join(PATH_SEPARATOR) }"
	jvmArgs "--add-modules", "${USING_MODULES.join(',')}"
	jvmArgs "--module", mainClassName
}

jar {
	manifest {
		attributes "Main-Class": mainClassName
	}
}

def versions = [
	"javafx": "11.0.1"
]

repositories {
	mavenCentral()
}

// JavaFX도 JFX11 부터는 Maven 저장소를 통해 의존성 관리가 가능하지만,
// jlink를 실행할때 해당 버전과 버전이 일치하는 jmod 파일을 관리해주는 기능이 아직 없으므로
// 사용할 JFX의 버전에 해당하는 jar 파일과 jmod 파일을 구해서, 수동으로 의존성 추가한다
dependencies {
//	compile "org.openjfx:javafx-base:${versions.javafx}:${PLATFORM}"
//	compile "org.openjfx:javafx-graphics:${versions.javafx}:${PLATFORM}"
//	compile "org.openjfx:javafx-controls:${versions.javafx}:${PLATFORM}"
	compile fileTree(dir: PATH_TO_FX, include: ["**/*.jar"])
}

task jlink(type: Exec, group: "build") {
	dependsOn "clean"
	dependsOn "jar"

	workingDir "build"

	commandLine "${JAVA_HOME}/bin/jlink",
		"--module-path", "${ (COMMON_MODULE_PATH + LINKING_MODULE_PATH).join(PATH_SEPARATOR) }",
		"--add-modules", "${USING_MODULES.join(",")}",
		"--launcher", "gui=${mainClassName}",
		"--output", "${DIST_PATH}",
		"--strip-debug",
		"--compress", "2",
		"--no-header-files",
		"--no-man-pages"
}